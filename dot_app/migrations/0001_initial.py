# Generated by Django 4.2.13 on 2024-06-10 11:37

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_minio_backend.models
import dot_app.models_funcs
import dot_app.models_validators
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Board",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        blank=True,
                        default=dot_app.models_funcs.get_datetime,
                        null=True,
                        validators=[dot_app.models_validators.check_created],
                    ),
                ),
                (
                    "modified",
                    models.DateTimeField(
                        blank=True,
                        default=dot_app.models_funcs.get_datetime,
                        null=True,
                        validators=[dot_app.models_validators.check_modified],
                    ),
                ),
                ("title", models.TextField()),
                ("description", models.TextField(blank=True, null=True)),
                ("type", models.TextField(blank=True, default="Undefined", null=True)),
                (
                    "year",
                    models.IntegerField(
                        blank=True,
                        default=2024,
                        null=True,
                        validators=[dot_app.models_validators.check_year],
                    ),
                ),
                (
                    "datasheet",
                    models.FileField(
                        blank=True,
                        null=True,
                        storage=django_minio_backend.models.MinioBackend(
                            bucket_name="static"
                        ),
                        upload_to=django_minio_backend.models.iso_date_prefix,
                    ),
                ),
                (
                    "image",
                    models.FileField(
                        blank=True,
                        null=True,
                        storage=django_minio_backend.models.MinioBackend(
                            bucket_name="static"
                        ),
                        upload_to=django_minio_backend.models.iso_date_prefix,
                    ),
                ),
            ],
            options={
                "db_table": '"databank"."Board"',
                "ordering": ["-id"],
            },
        ),
        migrations.CreateModel(
            name="BoardClient",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        blank=True,
                        default=dot_app.models_funcs.get_datetime,
                        null=True,
                        validators=[dot_app.models_validators.check_created],
                    ),
                ),
                (
                    "board",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="dot_app.board",
                        verbose_name="board",
                    ),
                ),
            ],
            options={
                "verbose_name": "relationship board client",
                "verbose_name_plural": "relationships boards client",
                "db_table": '"databank"."board_client"',
            },
        ),
        migrations.CreateModel(
            name="BoardManufacturer",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        blank=True,
                        default=dot_app.models_funcs.get_datetime,
                        null=True,
                        validators=[dot_app.models_validators.check_created],
                    ),
                ),
                (
                    "board",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="dot_app.board"
                    ),
                ),
            ],
            options={
                "db_table": '"databank"."board_manufacturer"',
            },
        ),
        migrations.CreateModel(
            name="Subtype",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        blank=True,
                        default=dot_app.models_funcs.get_datetime,
                        null=True,
                        validators=[dot_app.models_validators.check_created],
                    ),
                ),
                (
                    "modified",
                    models.DateTimeField(
                        blank=True,
                        default=dot_app.models_funcs.get_datetime,
                        null=True,
                        validators=[dot_app.models_validators.check_modified],
                    ),
                ),
                ("name", models.TextField()),
                ("description", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": '"databank"."subtype"',
                "ordering": ["-id"],
            },
        ),
        migrations.CreateModel(
            name="Manufacturer",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        blank=True,
                        default=dot_app.models_funcs.get_datetime,
                        null=True,
                        validators=[dot_app.models_validators.check_created],
                    ),
                ),
                (
                    "modified",
                    models.DateTimeField(
                        blank=True,
                        default=dot_app.models_funcs.get_datetime,
                        null=True,
                        validators=[dot_app.models_validators.check_modified],
                    ),
                ),
                ("title", models.TextField()),
                (
                    "boards",
                    models.ManyToManyField(
                        through="dot_app.BoardManufacturer", to="dot_app.board"
                    ),
                ),
            ],
            options={
                "db_table": '"databank"."Manufacturer"',
                "ordering": ["-id"],
            },
        ),
        migrations.CreateModel(
            name="Client",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        blank=True,
                        default=dot_app.models_funcs.get_datetime,
                        null=True,
                        validators=[dot_app.models_validators.check_created],
                    ),
                ),
                (
                    "modified",
                    models.DateTimeField(
                        blank=True,
                        default=dot_app.models_funcs.get_datetime,
                        null=True,
                        validators=[dot_app.models_validators.check_modified],
                    ),
                ),
                (
                    "boards",
                    models.ManyToManyField(
                        through="dot_app.BoardClient",
                        to="dot_app.board",
                        verbose_name="boards",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="user",
                    ),
                ),
            ],
            options={
                "verbose_name": "client",
                "verbose_name_plural": "clients",
                "db_table": '"databank"."client"',
            },
        ),
        migrations.CreateModel(
            name="BoardSubtype",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        blank=True,
                        default=dot_app.models_funcs.get_datetime,
                        null=True,
                        validators=[dot_app.models_validators.check_created],
                    ),
                ),
                (
                    "board",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="dot_app.board"
                    ),
                ),
                (
                    "subtype",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="dot_app.subtype",
                    ),
                ),
            ],
            options={
                "db_table": '"databank"."board_subtype"',
                "unique_together": {("board", "subtype")},
            },
        ),
        migrations.AddField(
            model_name="boardmanufacturer",
            name="manufacturer",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="dot_app.manufacturer"
            ),
        ),
        migrations.AddField(
            model_name="boardclient",
            name="client",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="dot_app.client",
                verbose_name="client",
            ),
        ),
        migrations.CreateModel(
            name="BoardBoard",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        blank=True,
                        default=dot_app.models_funcs.get_datetime,
                        null=True,
                        validators=[dot_app.models_validators.check_created],
                    ),
                ),
                (
                    "connections",
                    models.TextField(
                        choices=[
                            ("USB/UART", "USB with UART support"),
                            ("USB/COM", "USB with COM support"),
                            ("USB", "plain USB"),
                            ("USB-C:USB-A", "USB-C to USB-A connection"),
                            ("USB-Micro:USB-A", "Micro USB to USB-A connection"),
                        ],
                        default="USB/COM",
                    ),
                ),
                (
                    "compatibleboard",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="compatible_type_board",
                        to="dot_app.board",
                    ),
                ),
                (
                    "theboard",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="dot_app.board"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="board",
            name="manufacturers",
            field=models.ManyToManyField(
                through="dot_app.BoardManufacturer", to="dot_app.manufacturer"
            ),
        ),
        migrations.AddField(
            model_name="board",
            name="subtypes",
            field=models.ManyToManyField(
                through="dot_app.BoardSubtype", to="dot_app.subtype"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="boardmanufacturer",
            unique_together={("board", "manufacturer")},
        ),
    ]
